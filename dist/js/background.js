(()=>{"use strict";class t{title;dueDate;className;taskId;taskUrl;constructor({title:t,dueDate:e,className:a,taskId:s,taskUrl:n}){this.title=t,this.dueDate=e,this.className=a,this.taskId=s,this.taskUrl=n}toJson(){return{授業名:{select:{name:this.className}},締切日時:{date:{start:this.dueDate,time_zone:"Asia/Tokyo"}},チェック:{checkbox:!1},URL:{url:this.taskUrl},課題:{title:[{text:{content:this.title}}]},panda_id:{rich_text:[{text:{content:this.taskId}}]}}}toJsonString(){return this.toJson().toString()}}class e extends class{token;NOTION_VERSION="2022-02-22";constructor(t){this.token=t}createRequestHeader(){return{"Content-type":"application/json",Authorization:"Bearer "+this.token,"Notion-Version":this.NOTION_VERSION}}}{databaseId;constructor(t,e){super(t),this.databaseId=e}async query(e={}){const a=`https://glacial-shelf-66484.herokuapp.com/https://api.notion.com/v1/databases/${this.databaseId}/query`,s={method:"POST",headers:this.createRequestHeader(),body:JSON.stringify(e)};return(await fetch(a,s).then((t=>t.json())).then((t=>t))).results.map((e=>{const a=e.properties;return new t({title:a.課題.title[0]?a.課題.title[0].text.content:"",dueDate:a.締切日時.date.start,className:a.授業名.select.name,taskId:a.panda_id?.rich_text[0]?a.panda_id?.rich_text[0].text.content:"",taskUrl:a.URL?.url??""})}))}async pushPage(t){const e=t.toJson(),a={method:"POST",headers:this.createRequestHeader(),body:JSON.stringify({parent:{database_id:this.databaseId},properties:e})};await fetch("https://glacial-shelf-66484.herokuapp.com/https://api.notion.com/v1/pages",a).then((()=>console.log(`"${t.title}" をNotionに追加しました`)))}async pushTask(e){const a=new t({title:e.taskName,dueDate:e.dateToJPNString(),className:e.pandaClass.name,taskId:e.taskId,taskUrl:e.getTaskUrl()});await this.pushPage(a)}}class a{taskName;dueDate;pandaClass;taskId;constructor({taskName:t,dueDate:e,pandaClass:a,taskId:s}){this.taskName=t,this.dueDate=this.fixDueDate(e),this.pandaClass=a,this.taskId=s}fixDueDate(t){return 0===t.getHours()&&0===t.getMinutes()&&(t=new Date(t.getTime()-6e4)),t}static parseTaskData(t){return{taskName:t.title,dueDate:new Date(t.dueTimeString),taskId:t.id}}isExistNotion(t){return t.map((t=>t.taskId)).includes(this.taskId)}pushToNotion(t){}dateToJPNString(){return new Date(this.dueDate.getTime()+324e5).toISOString()}}class s extends a{getTaskUrl(){return`https://panda.ecs.kyoto-u.ac.jp/direct/assignment/${this.taskId}`}}class n{name;id;constructor(t,e){this.name=this.formatName(t),this.id=e}formatName=t=>{const e=t.replace(/\[.*\]/,"");let a=t.match(/[月火水木金][１-５]/)+e;return"経済学部秋田ゼミ"===a&&(a="水３"+a),"月２中国語IIＡ"===a&&(a+="（文法）"),"火４中国語IIＡ"===a&&(a+="（会話）"),a};getAssignmentUrl(){return"https://panda.ecs.kyoto-u.ac.jp/direct/assignment/site/"+this.id+".json"}getTestQuizUrl(){return"https://panda.ecs.kyoto-u.ac.jp/direct/sam_pub/context/"+this.id+".json"}static createElementFromHTML(t){return(new DOMParser).parseFromString(t,"text/html")}static async createClasses(){const t=await fetch("https://panda.ecs.kyoto-u.ac.jp/portal/site").then((t=>t.text())).then((t=>t)),e=n.createElementFromHTML(t),a=new Array(...e.querySelectorAll("ul.favoriteSiteList > li > div.fav-title > a:not([title='Home'])")),s=[];for(let t of a){const e=t.getAttribute("title");if(!e)throw new Error("タイトルが不適切です");const a=t.getAttribute("href");if(!a)throw new Error("サイトのURLが不適切です");const r=a.split("/").slice(-1)[0],i=new n(e,r);s.push(i)}return s}async createPandaTasks(){const t=this.getAssignmentUrl();return(await fetch(t).then((t=>t.json())).then((t=>t))).assignment_collection.map((t=>{const e=a.parseTaskData(t),n=Object.assign(e,{pandaClass:this});return new s(n)}))}}(async()=>{(async()=>{if(!class{static isIntervalEnded(t){const e="lastExecutedTime",a=localStorage.getItem(e)??"0",s=Number(a),n=new Date,r=(n.getTime()-s)/1e3/60>t;return r&&localStorage.setItem(e,n.getTime().toString()),r}}.isIntervalEnded(5))throw new Error("前回実行からまだ5分経っていないため実行を中止します");console.log("課題を取得中");const t=await n.createClasses(),a=[];for(let e of t){const t=await e.createPandaTasks();a.push(...t)}const s=new e("secret_FAq57RVurbCK8ZmUu5mKeQ5crJho5agZzFGPgUyNJ2H","2ba2cca6574d4bc883cc1d169c9d638a"),r=await s.query();a.filter((t=>!t.isExistNotion(r))).forEach((async t=>await s.pushTask(t))),console.log("課題の取得が終了しました")})().catch((t=>console.log(t)))})()})();